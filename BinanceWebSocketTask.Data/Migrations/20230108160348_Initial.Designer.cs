// <auto-generated />
using System;
using BinanceWebSocketTask.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BinanceWebSocketTask.Data.Migrations
{
    [DbContext(typeof(BinanceWebSocketTaskDbContext))]
    [Migration("20230108160348_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("BinanceWebSocketTask.Data.Entities.SymbolAveragePrice", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<double>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<int>("AveragePriceTimeSpanInMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviousAveragePrices")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Symbol");

                    b.ToTable("SymbolAveragePrices");
                });

            modelBuilder.Entity("BinanceWebSocketTask.Data.Entities.SymbolSimpleMovingAveragePriceDataPoint", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<double>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CreatedOn");

                    b.HasIndex("TimeInterval");

                    b.ToTable("SymbolSimpleMovingAveragePriceDataPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
